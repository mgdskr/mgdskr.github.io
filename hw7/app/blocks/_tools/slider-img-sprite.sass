/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$slider-img-md-name: 'slider-img-md'
$slider-img-md-x: 0px
$slider-img-md-y: 305px
$slider-img-md-offset-x: 0px
$slider-img-md-offset-y: -305px
$slider-img-md-width: 274px
$slider-img-md-height: 434px
$slider-img-md-total-width: 274px
$slider-img-md-total-height: 1174px
$slider-img-md-image: 'slider-img-sprite.png'
$slider-img-md: (0px, 305px, 0px, -305px, 274px, 434px, 274px, 1174px, 'slider-img-sprite.png', 'slider-img-md', )
$slider-img-sm-name: 'slider-img-sm'
$slider-img-sm-x: 0px
$slider-img-sm-y: 740px
$slider-img-sm-offset-x: 0px
$slider-img-sm-offset-y: -740px
$slider-img-sm-width: 274px
$slider-img-sm-height: 434px
$slider-img-sm-total-width: 274px
$slider-img-sm-total-height: 1174px
$slider-img-sm-image: 'slider-img-sprite.png'
$slider-img-sm: (0px, 740px, 0px, -740px, 274px, 434px, 274px, 1174px, 'slider-img-sprite.png', 'slider-img-sm', )
$slider-img-xs-name: 'slider-img-xs'
$slider-img-xs-x: 0px
$slider-img-xs-y: 0px
$slider-img-xs-offset-x: 0px
$slider-img-xs-offset-y: 0px
$slider-img-xs-width: 192px
$slider-img-xs-height: 304px
$slider-img-xs-total-width: 274px
$slider-img-xs-total-height: 1174px
$slider-img-xs-image: 'slider-img-sprite.png'
$slider-img-xs: (0px, 0px, 0px, 0px, 192px, 304px, 274px, 1174px, 'slider-img-sprite.png', 'slider-img-xs', )
$spritesheet-width: 274px
$spritesheet-height: 1174px
$spritesheet-image: 'slider-img-sprite.png'
$spritesheet-sprites: ($slider-img-md, $slider-img-sm, $slider-img-xs, )
$spritesheet: (274px, 1174px, 'slider-img-sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
