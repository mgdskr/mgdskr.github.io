/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$slider-arrow-left-name: 'slider-arrow-left'
$slider-arrow-left-x: 0px
$slider-arrow-left-y: 0px
$slider-arrow-left-offset-x: 0px
$slider-arrow-left-offset-y: 0px
$slider-arrow-left-width: 30px
$slider-arrow-left-height: 42px
$slider-arrow-left-total-width: 30px
$slider-arrow-left-total-height: 85px
$slider-arrow-left-image: 'slider-sprite.png'
$slider-arrow-left: (0px, 0px, 0px, 0px, 30px, 42px, 30px, 85px, 'slider-sprite.png', 'slider-arrow-left', )
$slider-arrow-right-name: 'slider-arrow-right'
$slider-arrow-right-x: 0px
$slider-arrow-right-y: 43px
$slider-arrow-right-offset-x: 0px
$slider-arrow-right-offset-y: -43px
$slider-arrow-right-width: 30px
$slider-arrow-right-height: 42px
$slider-arrow-right-total-width: 30px
$slider-arrow-right-total-height: 85px
$slider-arrow-right-image: 'slider-sprite.png'
$slider-arrow-right: (0px, 43px, 0px, -43px, 30px, 42px, 30px, 85px, 'slider-sprite.png', 'slider-arrow-right', )
$spritesheet-width: 30px
$spritesheet-height: 85px
$spritesheet-image: 'slider-sprite.png'
$spritesheet-sprites: ($slider-arrow-left, $slider-arrow-right, )
$spritesheet: (30px, 85px, 'slider-sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
